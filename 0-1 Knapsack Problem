def Dynamic_0_1_knapsack(v,w,n,W):
  c=[[None for i in range(W+1)] for j in range(n+1)]
  for i in range(W+1):
    c[0][i]=0
  for i in range(1,n+1):
    c[i][0]=0
    for j in range(1,W+1):
      if(w[i-1]<=j):
        if(v[i-1]+(c[i-1][j-w[i-1]])):
          c[i][j]=max(c[i-1][j],v[i-1]+c[i-1][j-w[i-1]])
        else:
          c[i][j]=c[i-1][j]
      else:
        c[i][j]=c[i-1][j]
  return(c[i][j])

n=int(input("Enter number of items:"))
print("Enter profits of",n,"items:",end="")
val=[int(x) for x in input().split()]
print("Enter weights of",n,"items:",end="")
wt=[int(x) for x in input().split()]
W=int(input("Enter maximum capacity of knapsack:"))
print("The maximum value of items that can be carried:",Dynamic_0_1_knapsack(val,wt,n,W))
